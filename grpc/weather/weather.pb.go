// Code generated by protoc-gen-go. DO NOT EDIT.
// source: weather.proto

/*
Package weather is a generated protocol buffer package.

It is generated from these files:
	weather.proto

It has these top-level messages:
	GetForecastDayRequest
	ForecastDayInfo
	GetForecastWeekRequest
	ForecastWeekInfo
*/
package weather

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DayOfWeek int32

const (
	DayOfWeek_Sun DayOfWeek = 0
	DayOfWeek_Mon DayOfWeek = 1
	DayOfWeek_Tue DayOfWeek = 2
	DayOfWeek_Wed DayOfWeek = 3
	DayOfWeek_Thu DayOfWeek = 4
	DayOfWeek_Fri DayOfWeek = 5
	DayOfWeek_Sat DayOfWeek = 6
)

var DayOfWeek_name = map[int32]string{
	0: "Sun",
	1: "Mon",
	2: "Tue",
	3: "Wed",
	4: "Thu",
	5: "Fri",
	6: "Sat",
}
var DayOfWeek_value = map[string]int32{
	"Sun": 0,
	"Mon": 1,
	"Tue": 2,
	"Wed": 3,
	"Thu": 4,
	"Fri": 5,
	"Sat": 6,
}

func (x DayOfWeek) String() string {
	return proto.EnumName(DayOfWeek_name, int32(x))
}
func (DayOfWeek) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type TemperatureUnit int32

const (
	TemperatureUnit_Celsius    TemperatureUnit = 0
	TemperatureUnit_Fahrenheit TemperatureUnit = 1
)

var TemperatureUnit_name = map[int32]string{
	0: "Celsius",
	1: "Fahrenheit",
}
var TemperatureUnit_value = map[string]int32{
	"Celsius":    0,
	"Fahrenheit": 1,
}

func (x TemperatureUnit) String() string {
	return proto.EnumName(TemperatureUnit_name, int32(x))
}
func (TemperatureUnit) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type GetForecastDayRequest struct {
	Day DayOfWeek `protobuf:"varint,1,opt,name=day,enum=DayOfWeek" json:"day,omitempty"`
}

func (m *GetForecastDayRequest) Reset()                    { *m = GetForecastDayRequest{} }
func (m *GetForecastDayRequest) String() string            { return proto.CompactTextString(m) }
func (*GetForecastDayRequest) ProtoMessage()               {}
func (*GetForecastDayRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetForecastDayRequest) GetDay() DayOfWeek {
	if m != nil {
		return m.Day
	}
	return DayOfWeek_Sun
}

type ForecastDayInfo struct {
	Day                         DayOfWeek       `protobuf:"varint,1,opt,name=day,enum=DayOfWeek" json:"day,omitempty"`
	Temperature                 int32           `protobuf:"varint,2,opt,name=Temperature" json:"Temperature,omitempty"`
	Unit                        TemperatureUnit `protobuf:"varint,3,opt,name=unit,enum=TemperatureUnit" json:"unit,omitempty"`
	ChanceOfPrecipitation       int32           `protobuf:"varint,4,opt,name=ChanceOfPrecipitation" json:"ChanceOfPrecipitation,omitempty"`
	ForecastDescription         string          `protobuf:"bytes,5,opt,name=ForecastDescription" json:"ForecastDescription,omitempty"`
	DetailedForecastDescription string          `protobuf:"bytes,6,opt,name=DetailedForecastDescription" json:"DetailedForecastDescription,omitempty"`
}

func (m *ForecastDayInfo) Reset()                    { *m = ForecastDayInfo{} }
func (m *ForecastDayInfo) String() string            { return proto.CompactTextString(m) }
func (*ForecastDayInfo) ProtoMessage()               {}
func (*ForecastDayInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ForecastDayInfo) GetDay() DayOfWeek {
	if m != nil {
		return m.Day
	}
	return DayOfWeek_Sun
}

func (m *ForecastDayInfo) GetTemperature() int32 {
	if m != nil {
		return m.Temperature
	}
	return 0
}

func (m *ForecastDayInfo) GetUnit() TemperatureUnit {
	if m != nil {
		return m.Unit
	}
	return TemperatureUnit_Celsius
}

func (m *ForecastDayInfo) GetChanceOfPrecipitation() int32 {
	if m != nil {
		return m.ChanceOfPrecipitation
	}
	return 0
}

func (m *ForecastDayInfo) GetForecastDescription() string {
	if m != nil {
		return m.ForecastDescription
	}
	return ""
}

func (m *ForecastDayInfo) GetDetailedForecastDescription() string {
	if m != nil {
		return m.DetailedForecastDescription
	}
	return ""
}

type GetForecastWeekRequest struct {
}

func (m *GetForecastWeekRequest) Reset()                    { *m = GetForecastWeekRequest{} }
func (m *GetForecastWeekRequest) String() string            { return proto.CompactTextString(m) }
func (*GetForecastWeekRequest) ProtoMessage()               {}
func (*GetForecastWeekRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type ForecastWeekInfo struct {
	Forecasts []*ForecastDayInfo `protobuf:"bytes,1,rep,name=forecasts" json:"forecasts,omitempty"`
}

func (m *ForecastWeekInfo) Reset()                    { *m = ForecastWeekInfo{} }
func (m *ForecastWeekInfo) String() string            { return proto.CompactTextString(m) }
func (*ForecastWeekInfo) ProtoMessage()               {}
func (*ForecastWeekInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ForecastWeekInfo) GetForecasts() []*ForecastDayInfo {
	if m != nil {
		return m.Forecasts
	}
	return nil
}

func init() {
	proto.RegisterType((*GetForecastDayRequest)(nil), "GetForecastDayRequest")
	proto.RegisterType((*ForecastDayInfo)(nil), "ForecastDayInfo")
	proto.RegisterType((*GetForecastWeekRequest)(nil), "GetForecastWeekRequest")
	proto.RegisterType((*ForecastWeekInfo)(nil), "ForecastWeekInfo")
	proto.RegisterEnum("DayOfWeek", DayOfWeek_name, DayOfWeek_value)
	proto.RegisterEnum("TemperatureUnit", TemperatureUnit_name, TemperatureUnit_value)
}

func init() { proto.RegisterFile("weather.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 380 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xdf, 0xea, 0xd3, 0x30,
	0x1c, 0xc5, 0x9b, 0x75, 0x7f, 0xd8, 0x77, 0xb8, 0xc6, 0xc8, 0x66, 0x99, 0x5e, 0x94, 0xe2, 0x45,
	0xd9, 0x45, 0x90, 0xa9, 0x77, 0x82, 0xe2, 0xc6, 0x44, 0x41, 0x26, 0x75, 0xb2, 0xeb, 0xd8, 0x7d,
	0x4b, 0x83, 0x33, 0xad, 0x69, 0x8a, 0xec, 0x2d, 0x7c, 0x05, 0xdf, 0x54, 0x9a, 0xe9, 0xac, 0xfd,
	0x95, 0xdd, 0x1d, 0xce, 0xc9, 0x09, 0xc9, 0x87, 0x03, 0xf7, 0x7e, 0xa0, 0x30, 0x19, 0x6a, 0x5e,
	0xe8, 0xdc, 0xe4, 0xe1, 0x0b, 0x98, 0xbd, 0x45, 0xb3, 0xcd, 0x35, 0x26, 0xa2, 0x34, 0x1b, 0x71,
	0x8e, 0xf1, 0x7b, 0x85, 0xa5, 0x61, 0x8f, 0xc1, 0x3d, 0x8a, 0xb3, 0x4f, 0x02, 0x12, 0x4d, 0x57,
	0xc0, 0x37, 0xe2, 0xbc, 0x4b, 0x0f, 0x88, 0x5f, 0xe3, 0xda, 0x0e, 0x7f, 0xf5, 0xc0, 0x6b, 0x94,
	0xde, 0xa9, 0x34, 0xbf, 0xdd, 0x60, 0x01, 0x4c, 0xf6, 0xf8, 0xad, 0x40, 0x2d, 0x4c, 0xa5, 0xd1,
	0xef, 0x05, 0x24, 0x1a, 0xc4, 0x4d, 0x8b, 0x3d, 0x81, 0x7e, 0xa5, 0xa4, 0xf1, 0x5d, 0x7b, 0x01,
	0xe5, 0x8d, 0xec, 0xb3, 0x92, 0x26, 0xb6, 0x29, 0x7b, 0x0e, 0xb3, 0x75, 0x26, 0x54, 0x82, 0xbb,
	0xf4, 0xa3, 0xc6, 0x44, 0x16, 0xd2, 0x08, 0x23, 0x73, 0xe5, 0xf7, 0xed, 0x8d, 0xdd, 0x21, 0x7b,
	0x0a, 0x0f, 0xae, 0xcf, 0xc5, 0x32, 0xd1, 0xb2, 0xb0, 0x9d, 0x41, 0x40, 0xa2, 0x71, 0xdc, 0x15,
	0xb1, 0xd7, 0xf0, 0x68, 0x83, 0x46, 0xc8, 0x13, 0x1e, 0xbb, 0x9a, 0x43, 0xdb, 0xbc, 0x75, 0x24,
	0xf4, 0x61, 0xde, 0x40, 0x6b, 0x49, 0x5c, 0xd8, 0x86, 0x6f, 0x80, 0x36, 0x6d, 0x4b, 0x8f, 0xc3,
	0x38, 0xfd, 0xe3, 0x95, 0x3e, 0x09, 0xdc, 0x68, 0xb2, 0xa2, 0xbc, 0x85, 0x38, 0xfe, 0x77, 0x64,
	0xf9, 0x1e, 0xc6, 0x57, 0xc2, 0x6c, 0x04, 0xee, 0xa7, 0x4a, 0x51, 0xa7, 0x16, 0x1f, 0x72, 0x45,
	0x49, 0x2d, 0xf6, 0x15, 0xd2, 0x5e, 0x2d, 0x0e, 0x78, 0xa4, 0xae, 0x75, 0xb2, 0x8a, 0xf6, 0x6b,
	0xb1, 0xd5, 0x92, 0x0e, 0x6c, 0x4b, 0x18, 0x3a, 0x5c, 0x72, 0xf0, 0x5a, 0xb0, 0xd9, 0x04, 0x46,
	0x6b, 0x3c, 0x95, 0xb2, 0x2a, 0xa9, 0xc3, 0xa6, 0x00, 0x5b, 0x91, 0x69, 0x54, 0x19, 0x4a, 0x43,
	0xc9, 0xea, 0x27, 0x01, 0xef, 0x70, 0x99, 0xd1, 0xdf, 0x17, 0xb2, 0x97, 0x30, 0xfd, 0x7f, 0x48,
	0x6c, 0xce, 0x3b, 0x97, 0xb5, 0xb8, 0xf3, 0xad, 0xd0, 0x61, 0xaf, 0xc0, 0x6b, 0xb1, 0x62, 0x0f,
	0x79, 0x37, 0xbd, 0xc5, 0x7d, 0xde, 0x86, 0x17, 0x3a, 0x5f, 0x86, 0x76, 0xce, 0xcf, 0x7e, 0x07,
	0x00, 0x00, 0xff, 0xff, 0x76, 0x60, 0xcf, 0x8a, 0xdf, 0x02, 0x00, 0x00,
}
